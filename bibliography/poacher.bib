@article{aho1974lr,
  title = {LR parsing},
  author = {Aho, Alfred V. and Johnson, Stephen C.},
  journal = {ACM Computing Surveys (CSUR)},
  volume = {6},
  number = {2},
  pages = {99--124},
  year = {1974},
  publisher = {ACM New York, NY, USA},
}

@article{deremer1971simple,
  title = {Simple LR (k) grammars},
  author = {DeRemer, Franklin L},
  journal = {Communications of the ACM},
  volume = {14},
  number = {7},
  pages = {453--460},
  year = {1971},
  publisher = {ACM New York, NY, USA},
}

@article{anderson1973efficient,
  title = {Efficient LR (1) parsers},
  author = {Anderson, Tom and Eve, Jim and Horning, James J.},
  journal = {Acta Informatica},
  volume = {2},
  pages = {12--39},
  year = {1973},
  publisher = {Springer},
}

@article{pottier2006towards,
  title = {Towards efficient, typed LR parsers},
  author = {Pottier, Fran{\c{c}}ois and R{\'e}gis-Gianas, Yann},
  journal = {Electronic Notes in Theoretical Computer Science},
  volume = {148},
  number = {2},
  pages = {155--180},
  year = {2006},
  publisher = {Elsevier},
}

@book{aho2007compilers,
  title = {Compilers: principles, techniques, and tools},
  author = {Aho, Alfred V and Sethi, Ravi and Ullman, Jeffrey D},
  volume = {2},
  year = {2007},
  publisher = {Addison-wesley Reading},
}

@misc{ctre,
  author = {Hana {Dusíková}},
  title = {Compile Time Regular Expression in C++},
  url = {https://github.com/hanickadot/compile-time-regular-expressions},
  year = {2018},
}

@misc{cest,
  author = {Paul {Keir}},
  title = {Towards a constexpr version of the C++ standard library},
  url = {https://github.com/pkeir/cest},
  year = {2020},
}

@misc{ctpg,
  author = {Piotr {Winter}},
  title = {C++ Compile Time Parser Generator},
  url = {https://github.com/peter-winter/ctpg},
  year = {2021},
}

@misc{fmt,
  author = {Victor {Zverovich}},
  title = {A modern formatting library},
  url = {https://github.com/fmtlib/fmt},
  year = {2015},
}

@misc{blazelib,
  author = {Klaus {Iglberger}},
  title = {Blaze C++ Linear Algebra Library},
  url = {https://bitbucket.org/blaze-lib/blaze/},
  year = {2012},
}

@article{eigen,
  title = {Eigen},
  author = {Guennebaud, Ga{\"e}l and Jacob, Benoit and others},
  url = {https://eigen.tuxfamily.org},
  volume = {3},
  year = {2010},
}

@article{iglberger2012_1,
  author = {Klaus {Iglberger} and Georg {Hager} and Jan {Treibig} and Ulrich {R{
            \"u}de}},
  title = {Expression Templates Revisited: A Performance Analysis of Current
           Methodologies},
  journal = {SIAM Journal on Scientific Computing},
  year = {2012},
  volume = {34(2)},
  pages = {C42--C69},
  doi = {10.1137/110830125},
}

@inproceedings{iglberger2012_2,
  author = {Klaus {Iglberger} and Georg {Hager} and Jan {Treibig} and Ulrich {R{
            \"u}de}},
  title = {High Performance Smart Expression Template Math Libraries},
  booktitle = {Proceedings of the 2nd International Workshop on New Algorithms
               and Programming Models for the Manycore Era (APMM 2012) at HPCS
               2012},
  year = {2012},
  doi = {10.1109/HPCSim.2012.6266939},
}

@incollection{thrust,
  title = {Chapter 26 - Thrust: A Productivity-Oriented Library for CUDA},
  editor = {Wen-mei W. Hwu},
  booktitle = {GPU Computing Gems Jade Edition},
  publisher = {Morgan Kaufmann},
  address = {Boston},
  pages = {359-371},
  year = {2012},
  series = {Applications of GPU Computing Series},
  isbn = {978-0-12-385963-1},
  doi = {https://doi.org/10.1016/B978-0-12-385963-1.00026-5},
  url = {https://www.sciencedirect.com/science/article/pii/B9780123859631000265},
  author = {Nathan Bell and Jared Hoberock},
  abstract = {Publisher Summary This chapter demonstrates how to leverage the
              Thrust parallel template library to implement high performance
              applications with minimal programming effort. With the introduction
              of CUDA C/C++, developers can harness the massive parallelism of
              the graphics processing unit (GPU) through a standard programming
              language. CUDA allows developers to make fine-grained decisions
              about how computations are decomposed into parallel threads and
              executed on the device. The level of control offered by CUDA C/C++
              is an important feature; it facilitates the development of
              high-performance algorithms for a variety of computationally
              demanding tasks which merit significant optimization and profit
              from low-level control of the mapping onto hardware. With Thrust,
              developers describe their computation using a collection of
              high-level algorithms and completely delegate the decision of how
              to implement the computation to the library. Thrust is implemented
              entirely within CUDA C/C++ and maintains interoperability with the
              rest of the CUDA ecosystem. Interoperability is an important
              feature because no single language or library is the best tool for
              every problem. Thrust presents a style of programming emphasizing
              genericity and composability. Indeed, the vast majority of Thrust's
              functionality is derived from four fundamental parallel
              algorithms—for each, reduce, scan, and sort. Thrust's high-level
              algorithms enhance programmer productivity by automating the
              mapping of computational tasks onto the GPU. Thrust also boosts
              programmer productivity by providing a rich set of algorithms for
              common patterns.},
}

@misc{scalable-reflection,
  author = {Daveed Vandevoorde and Wyatt Childers and Andrew Sutton and Faisal
            Vali},
  title = "{P1240R2}: Scalable Reflection",
  howpublished = "\url{https://wg21.link/p1240r2}",
  year = {2022},
  month = {1},
  publisher = {WG21},
}

@misc{virtual-constexpr,
  author = "Peter Dimov and Vassil Vassilev",
  title = "{P1064R0}: Allowing Virtual Function Calls in Constant Expressions",
  howpublished = "\url{https://wg21.link/p1064r0}",
  year = 2018,
  month = 5,
  publisher = "WG21",
}

@misc{constexpr-memory,
  author = "Barry Revzin",
  title = "{P2670R0}: Non-transient constexpr allocation",
  howpublished = "\url{https://wg21.link/p2670r0}",
  year = 2022,
  month = 10,
  publisher = "WG21",
}

@techreport{stepanov:1995,
  author = {Alexander Stepanov and Meng Lee},
  title = {The Standard Template Library},
  institution = {HP Laboratories},
  year = {1995},
  number = {95-11(R.1)},
}

@inproceedings{haeri:2012,
  author = {Haeri, Seyed Hossein and Schupp, Sibylle and H\"{u}ser, Jonathan},
  title = {Using Functional Languages to Facilitate C++ Metaprogramming},
  booktitle = {Proceedings of the 8th ACM SIGPLAN Workshop on Generic
               Programming},
  series = {WGP '12},
  year = {2012},
  isbn = {978-1-4503-1576-0},
  location = {Copenhagen, Denmark},
  pages = {33--44},
  numpages = {12},
  publisher = {ACM},
  address = {New York, NY, USA},
}

@misc{unruh:1994,
  author = {Erwin Unruh},
  title = {Prime number computation},
  howpublished = {ANSI X3J16-94-0075/ISO WG21-462},
  year = {1994},
}

@book{abrahams:2004,
  author = {Abrahams, David and Gurtovoy, Aleksey},
  title = {C++ Template Metaprogramming: Concepts, Tools, and Techniques from
           Boost and Beyond (C++ in Depth Series)},
  year = {2004},
  isbn = {0321227255},
  publisher = {Addison-Wesley Professional},
}


@inproceedings{sheard:2002,
  title = {Template meta-programming for Haskell},
  author = {Sheard, Tim and Jones, Simon Peyton},
  booktitle = {Proceedings of the 2002 ACM SIGPLAN workshop on Haskell},
  pages = {1--16},
  year = {2002},
  organization = {ACM},
}

@misc{template:dlang,
  author = {Walter Bright},
  title = {Templates Revisited},
  howpublished = {http://dlang.org/templates-revisited.html},
  year = {2014},
}


@article{veldhuizen:1995,
  author = "Todd L. Veldhuizen",
  title = "Expression templates",
  journal = "C++ Report",
  volume = "7",
  number = "5",
  pages = "26--31",
  month = jun,
  year = "1995",
  note = "Reprinted in C++ Gems, ed. Stanley Lippman",
  coden = "CRPTE7",
  ISSN = "1040-6042",
  bibdate = "Tue Mar 25 13:34:48 MST 1997",
}

@book{vandevoorde:2002,
  author = {Vandevoorde, David and Josuttis, Nicolai M.},
  title = {C++ Templates},
  year = {2002},
  isbn = {0201734842},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  address = {Boston, MA, USA},
}

@incollection{serot:2008,
  title = {Functional meta-programming for parallel skeletons},
  author = {Serot, Jocelyn and Falcou, Joël},
  booktitle = {Computational Science--ICCS 2008},
  pages = {154--163},
  year = {2008},
  publisher = {Springer Berlin Heidelberg},
}

@inproceedings{jarvi:1998,
  title = {Compile time recursive objects in C++},
  author = {Jarvi, Jaakko},
  booktitle = {Technology of Object-Oriented Languages, 1998. TOOLS 27.
               Proceedings},
  pages = {66--77},
  year = {1998},
  organization = {IEEE},
}

@inproceedings{veldhuizen:1998,
  author = {Todd L. Veldhuizen and Dennis Gannon},
  title = {Active Libraries: Rethinking the roles of compilers and libraries},
  booktitle = {In Proceedings of the SIAM Workshop on Object Oriented Methods
               for Inter-operable Scientific and Engineering Computing (OO'98},
  year = {1998},
  publisher = {SIAM Press},
}

@article{spinellis:2001,
  title = "Notable design patterns for domain-specific languages",
  journal = "Journal of Systems and Software",
  volume = "56",
  number = "1",
  pages = "91 - 99",
  year = "2001",
  note = "",
  issn = "0164-1212",
  author = "Diomidis Spinellis",
  keywords = "Design patterns",
  keywords = "Domain-specific languages",
}

@misc{more-constexpr-containers,
  author = "Daveed Vandevoorde and Peter Dimov and Louis Dionne and Nina Ranns
            and Richard Smith and Daveed Vandevoorde",
  title = "{P0784R7}: More constexpr containers",
  howpublished = "\url{https://wg21.link/p0784r7}",
  year = 2019,
  month = 7,
  publisher = "WG21",
}

@article{hpx,
  doi = {10.21105/joss.02352},
  url = {https://doi.org/10.21105/joss.02352},
  year = {2020},
  publisher = {The Open Journal},
  volume = {5},
  number = {53},
  pages = {2352},
  author = {Hartmut Kaiser and Patrick Diehl and Adrian S. Lemoine and Bryce
            Adelstein Lelbach and Parsa Amini and Agustín Berge and John
            Biddiscombe and Steven R. Brandt and Nikunj Gupta and Thomas Heller
            and Kevin Huck and Zahra Khatami and Alireza Kheirkhahan and Auriane
            Reverdell and Shahrzad Shirzad and Mikael Simberg and Bibek Wagle and
            Weile Wei and Tianyi Zhang},
  title = {HPX - The C++ Standard Library for Parallelism and Concurrency},
  journal = {Journal of Open Source Software},
}

@article{shunting-yard,
  author = {Edsger Wybe Dijkstra},
  year = {1961},
  journal = {ALGOL-60 Translation},
  url = {http://www.cs.utexas.edu/~EWD/MCReps/MR35.PDF}
}
